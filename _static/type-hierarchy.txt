# To generate type-hierarchy.png from this file,
# install graphviz, the Graph::Easy and Graph::Easy::As_svg Perl modules,
# and then run: graph-easy type-hierarchy.txt --png

graph { flow: up; }
node { font: Menlo; }

[ bidict.abc.BidirectionalMapping ] { fontsize: 0.7em; borderstyle: dashed; fill: #eeeeee; } -> [ collections.abc.Mapping ] { fontsize: 0.7em; borderstyle: dashed; fill: #eeeeee; }
[ bidict.BidictBase ] { fontsize: 0.7em; fill: #cccccc; } -> [ bidict.abc.BidirectionalMapping ]
[ bidict.bidict ] -> [ bidict.BidictBase ]
[ bidict.loosebidict ] -> [ bidict.bidict ]
[ bidict.FrozenBidictBase ] { fontsize: 0.7em; fill: #cccccc; } -> [ bidict.BidictBase ]
[ bidict.frozenbidict ] -> [ bidict.FrozenBidictBase ]
[ bidict.OrderedBidictBase ] { fontsize: 0.7em; fill: #cccccc; } -> [ bidict.BidictBase ]
[ bidict.orderedbidict ] -> [ bidict.OrderedBidictBase ]
[ bidict.orderedbidict ] -> [ bidict.bidict ]
[ bidict.frozenorderedbidict ] -> [ bidict.OrderedBidictBase ]
[ bidict.frozenorderedbidict ] -> [ bidict.FrozenBidictBase ]
[ bidict.looseorderedbidict ] -> [ bidict.orderedbidict ]
[ bidict.looseorderedbidict ] -> [ bidict.loosebidict ]

#[ bidict.frozenbidict ] -> { style: dashed; } [ collections.abc.Hashable ] { borderstyle: dashed; }
#[ bidict.frozenorderedbidict ] -> { style: dashed; } [ collections.abc.Hashable ]

#[ bidict.bidict ] -> { style: dashed; } [ collections.abc.MutableMapping ] { borderstyle: dashed; }
#[ bidict.orderedbidict ] -> { style: dashed; } [ collections.abc.MutableMapping ]

#[ bidict.OrderedBidictBase ] -> { style: dashed; } [ collections.abc.Reversible ] { borderstyle: dashed; }
