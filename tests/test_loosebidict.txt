Test script for bidict.LooseBidict::

    >>> from bidict import LooseBidict

Initializing with different keys mapping to the same value succeeds::

    >>> LooseBidict([(1, 1), (2, 1)])
    LooseBidict({2: 1})

Adding a new key associated with an existing value succeeds::

    >>> b = LooseBidict({1: 1})
    >>> b[2] = 1
    >>> b
    LooseBidict({2: 1})
    >>> b.update({3: 1})
    >>> b
    LooseBidict({3: 1})

Using ``update`` with an existing key successfully overwrites::

    >>> b.update({3: 2})
    >>> b
    LooseBidict({3: 2})

Subclassing works as expected::

    >>> class MyLooseBidict(LooseBidict): pass
    >>> b = MyLooseBidict()
    >>> b[2] = 4
    >>> b
    MyLooseBidict({2: 4})
