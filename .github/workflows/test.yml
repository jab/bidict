# This name appears as the text in the build badge: https://github.com/jab/bidict/actions/workflows/test.yml/badge.svg
name: tests

"on":
  workflow_dispatch:
    inputs:
      hypothesis_profile:
        type: choice
        description: (optional)
        options:
        - default
        - more-examples
  schedule:
    - cron: "15 16 * * *"
  push:
    branches:
      - main
      - dev
      - deps
  pull_request:
    branches:
      - main

env:
  FORCE_COLOR: "1"
  PYTEST_ADDOPTS: "--benchmark-disable"

jobs:
  test-all:
    name: ${{ matrix.pyversion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # https://github.com/actions/python-versions/blob/main/versions-manifest.json
          - pyversion: "3.12"
            enable_coverage: true
          - pyversion: "3.11"
          - pyversion: "3.10"
          - pyversion: "3.9"
          - pyversion: "3.8"
          - pyversion: "pypy-3.10"
            deps_subdir: "pypy3.10"
          - pyversion: "pypy-3.9"
            deps_subdir: "pypy3.9"
    steps:
      - name: check out source
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938
      - name: set up Python ${{ matrix.pyversion }}
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3
        with:
          python-version: ${{ matrix.pyversion }}
      - name: set up cached uv
        uses: hynek/setup-cached-uv@3e2b834ff80f67c4f272449b9f1aa388c294ae48
      - name: create and activate virtualenv
        run: |
          uv venv
          source .venv/bin/activate
          echo PATH="$PATH" >> "$GITHUB_ENV"
      - name: uv pip install
        run: uv pip install -r dev-deps/test.txt
      - name: cache .mypy_cache dir
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
        with:
          path: .mypy_cache
          key: mypy
      - name: run mypy
        run: mypy bidict tests
      - name: set hypothesis profile
        run: |
          hypothesis_profile=${{ github.event.inputs.hypothesis_profile || (github.event_name == 'schedule' && 'more-examples' || 'default') }}
          echo PYTEST_ADDOPTS="$PYTEST_ADDOPTS --hypothesis-profile=$hypothesis_profile" >> "$GITHUB_ENV"
      - name: cache .hypothesis dir
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
        with:
          path: .hypothesis
          key: hypothesis|${{ runner.os }}|${{ matrix.pyversion }}
      - name: maybe enable coverage
        if: matrix.enable_coverage
        run: |
          echo COVERAGE_PROCESS_START="$(pwd)/.coveragerc" >> "$GITHUB_ENV"
          echo RUN_PYTEST_CMD="coverage run -m pytest" >> "$GITHUB_ENV"
      - name: set COVERAGE_CORE=sysmon if py3.12
        if: matrix.pyversion == '3.12'
        run: |
          echo COVERAGE_CORE=sysmon >> "$GITHUB_ENV"
      - name: run pytest
        run: ${RUN_PYTEST_CMD:-pytest}
      - name: combine and show any collected coverage
        if: matrix.enable_coverage
        run: |
          coverage combine
          coverage debug data
          coverage report
      - name: maybe upload to Codecov  # https://github.com/codecov/codecov-action
        if: matrix.enable_coverage
        uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          verbose: true
          fail_ci_if_error: false  # https://github.com/codecov/codecov-action/issues/557


permissions:
  contents: read
