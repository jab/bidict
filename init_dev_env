#!/bin/bash

set -euo pipefail

# Keep in sync with _default_py_minor_ver in ./tox.ini and ./upgrade-dev-dependencies:
declare -r _default_py_minor_ver="12"
export DEV_PY="python3.$_default_py_minor_ver"

declare -r hint="Hint: Use direnv + ./flake.nix to bootstrap a development environment"

if ! type "$DEV_PY"; then
  >&2 echo "Error: No $DEV_PY on PATH. $hint"
  exit 1
fi

if ! type pre-commit; then
  >&2 echo "Error: No pre-commit on PATH. $hint"
  exit 2
fi
pre-commit install -f

export VENV_BASE_DIR=".venv"
mkdir -p "$VENV_BASE_DIR"

export DEV_VENV="$VENV_BASE_DIR/dev"

if ! test -d "$DEV_VENV"; then
  "$DEV_PY" -m venv --upgrade-deps "$DEV_VENV"
fi

export DEV_PIP="$DEV_VENV/bin/pip"
export DEV_PIP_SYNC="$DEV_VENV/bin/pip-sync"

if ! test -e "$DEV_PIP_SYNC"; then
  "$DEV_PIP" install pip-tools
  test -e "$DEV_PIP_SYNC"
fi

declare -r req_sets="dev docs test"
declare -r out_dir="dev-deps/$DEV_PY"
mkdir -p "$out_dir"
for i in $req_sets; do
  reqs_in="dev-deps/$i.in"
  reqs_out="$out_dir/$i.txt"
  "$DEV_VENV/bin/pip-compile" --strip-extras --generate-hashes --reuse-hashes --allow-unsafe "$reqs_in" -o "$reqs_out"
done
"$DEV_PIP_SYNC" $out_dir/*.txt

if ! "$DEV_PIP" show -qq bidict; then
  "$DEV_PIP" install -e .
fi

echo "Development virtualenv initialized: ./$DEV_VENV"
echo "To activate, run: source ./$DEV_VENV/bin/activate (or equivalent for your shell)"
